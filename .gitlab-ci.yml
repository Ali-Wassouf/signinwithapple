image: guss77/dind-awscli:latest
services:
  - docker:dind

stages:
  - build
  - release
  - deploy

variables:
  DOCKER_BUILDKIT: 1
  GIT_STRATEGY: none
  AWS_REGION: eu-central-1
  APLICATION_NAME: api

before_script:
# Login to the docker registry
  - docker info
  - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY


build_image:
  stage: build
  variables:
    GIT_STRATEGY: fetch
  script:
    # Build the docker image and use the latest release as a docker cache source
    # https://testdriven.io/blog/faster-ci-builds-with-docker-cache/
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --pull --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .

release_latest:
  stage: release
  only:
    - master
  script:
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

release_tag:
  stage: release
  only:
    - tags
  script:
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

deploy_moon:
  stage: deploy
  environment: moon
  when: manual
  only:
    - tags
  script:
    - export SERVICE_NAME="$APLICATION_NAME-$CI_ENVIRONMENT_NAME"
    - export DOCKER_IMAGE="$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - ./deploy-scripts/deploy.sh
